GOALS FOR THE COMMON FRONTEND ARCHITECTURE

- SRP, Single-Responsibility Principle. Each module, function, and item is doing only one thing. (If one module is doing several, split into multiple orchestrated modules)

- Cousin of the previous one: Each thing is only specified once, in one place

- Each feature (done by a sub-team, feature team) is folder, file, and codeline -wise as independent of others as possible.

- (codeline-wise: It's not always /(never? mostly?) possible to add new feature without touching something of the
existing shared files. But that should be done as a) as a fast commit and shared to others b) as uniform way as possible
c) hopefully in a new codeline separate from the previous items. Seen nicely in Git
Think about e.g. a new View and its SPA "URL" added to the routing.

- React components should be in their own files so that they can be a) easily reused b) checked fast and with good test needs understanding
c) seen without scrolling the code

- All settings and other constants should be read from env variables or other centralized storage (app-wide context? Route nesting -wide routing context)

- Code should be easy to read by people who did not write it. Maximize reading speed, not the writing speed.

- People who do not know the project should be able to install and setup the project. Hand-over to customer or next project team is important.

- Documentation should be short but informative and easy to modify and commit to git version management (Markdown or other text format)

- Documentation 'hierarchy':
1. code naming should be telling as much it can, 
2. then remaining things with comments in code, 
3. rest to the separate documentation (in repo, in Markdown)

*. temp comments in code while developing it. TODO markers